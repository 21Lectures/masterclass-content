Day 1
    Morning
        Pre-break: 34 Slides
            Course Intro
            History of Bitcoin
            Cryptography Basics:
                Asymmetric cryptography
                Digital signatures
                Hash functions
                Merkle Trees+
        Post-break
            Industry representative
    Afternoon
        Pre-break
            Bitcoin's scripting language
            Addresses
        Post-break
            Wallets
                Keys
                HD Wallets
                Seed Phrases & Passhphrases
            UTXOs & Transactions


Day 2
    Morning
        Pre-break
            The Mempool and the Fee Market
            Blocks
        Post-break
            Proof-of-Work & Mining
            Mining Pool FUD
            The Blockchain
            Consensus & Forks
    Afternoon
        Pre-break
            Full Nodes, Light Clients
            P2P Networking
        Post-break
            Privacy on Bitcoin
            The Basics of the Lightning Network
            Final Q & A


Random stuff to include

Time-to-mine
also on blockexplorer.org

Difficulty, Hashrate
What is special about 50 BTC => 50%

When were softforks activated?
https://bitcoinexplorer.org/node-details

largest mempool transactions
https://bitcoinexplorer.org/mempool-summary

realization that everybody has a different mempool:
compare:
    https://bitcoinexplorer.org/mempool-summary
    https://mempool.space
    https://jochen-hoenicke.de/queue/#BTC,3m,weight
    https://statoshi.info/d/000000020/memory-pool?orgId=1&from=now-30d

hash rate distribution
https://bitcoinexplorer.org/mining-summary

SHA-1 collision bounty is still active!
https://bitcoinexplorer.org/fun
https://bitcoinexplorer.org/address/37k7toV1Nv4DfmQbmZ8KuZDQCYK9x5KpzP

After explaining addresses, show Star Wars tx 
https://bitcoinexplorer.org/tx/143a3d7e7599557f9d63e7f224f34d33e9251b2c23c38f95631b3a54de53f024

Grep for "The Times" in Bitcoin Core repo

RBF, CPFP

mining scripting
for word in $(cat /usr/share/dict/words); do
line=$(echo -n $word; echo -n " "; echo $word | sha256sum); echo $line | grep " 0"  
done
